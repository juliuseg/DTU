import numpy as np

crossBaseline = np.array([285.11665996463296, 295.28872737576336, 299.26614426337824, 294.7764593187116, 289.31694283914237, 276.44039174593485, 305.6796230907934, 287.6857190629241, 288.76788750203525, 290.7162355656017])
crossRegression = np.array([19.012424092830955, 21.534770759785907, 23.088864691705542, 19.09145673050284, 24.086296046321614, 19.76065574443629, 18.848628756393843, 22.19284243318082, 20.691475044736126, 19.763062448967503])
crossANN = np.array([18.825311335721608, 21.692763739635907, 23.041483276685653, 19.129276466472614, 23.936057925382354, 19.920603026170618, 18.55740769465106, 22.23483631755047, 20.672880519201566, 19.70940152882168])

classificationBaselineErrors = np.array([0.5193312434691746, 0.5182863113897597, 0.5015673981191222, 0.5005224660397074, 0.5203761755485894, 0.5067920585161965, 0.502612330198537, 0.5182863113897597, 0.5010460251046025, 0.5083682008368201])
classificationRegressionErrors = np.array([0.054336468129571575, 0.04597701149425287, 0.04179728317659352, 0.0522466039707419, 0.055381400208986416, 0.054336468129571575, 0.04597701149425287, 0.04493207941483804, 0.038702928870292884, 0.05439330543933055])
classificationANNErrors = np.array([0.053291536050156685, 0.05120167189132707, 0.043887147335423204, 0.053291536050156685, 0.056426332288401215, 0.0543364681295716, 0.04806687565308254, 0.04597701149425293, 0.03870292887029292, 0.05543933054393302])


a = crossRegression 
b = crossANN

from scipy.stats import ttest_rel, t
import numpy as np

# Assuming the arrays a and b are already defined

# Perform the pairwise t-test
t_stat, p_value = ttest_rel(a, b)

# Calculate the mean difference and the standard deviation of differences
mean_diff = np.mean(a - b)
std_diff = np.std(a - b, ddof=1)

# Calculate the standard error of the mean difference
n = len(a)
se_diff = std_diff / np.sqrt(n)

# Calculate the 95% confidence interval for the mean difference
confidence_level = 0.95
t_critical = abs(t.ppf((1 - confidence_level) / 2, df=n-1))
margin_of_error = t_critical * se_diff

lower_bound = mean_diff - margin_of_error
upper_bound = mean_diff + margin_of_error

print(f'P-value: {p_value}')
print(f'95% Confidence Interval: [{lower_bound}, {upper_bound}]')
